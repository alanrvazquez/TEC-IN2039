---
title: |
   | Sesión 7: 
   | Datos de múltiples variables  
author: 
  - name: Alan R. Vázquez
    affiliations:
      - name: Tecnológico de Monterrey
format: revealjs
editor: visual
slide-number: True
logo: IN2039_logo.png
css: style.css
---

## Los Tópicos de Hoy

1.  Datos de más de una variable

2.  Dos variables numéricas

3.  Una variable numérica y una categórica

4.  Dos variables categóricas

5.  Tres o más variables

## Carguemos las librerías

Carguémos las librerías `ggplot2`, `ggformula`, y `readxl` en Google Colab y R antes de comenzar.

```{r}
#| echo: true
#| output: false

# Nos se te olvide instalar la librería "ggformula" en Google Colab.
# install.packages("ggformula")
library(readxl)
library(ggplot2)
library(ggformula)
```

## Una nueva librería

Hoy, utilizaremos una librería llamada **dplyr** para generar resúmenes estadísticos cuando tenemos más de una variable.

::: columns
::: {.column width="50%"}
![](images/tidyverse.jpeg){fig-align="center"}
:::

::: {.column width="50%"}
-   La librería **dplyr** es una herramienta para la manipulación y transformación de datos.

-   Es parte del *tidyverse*.
:::
:::

Cárgala en Google Colab con el siguiente código.
```{r}
#| echo: true
#| output: false

library(dplyr)
```

## Datos multivariados

Los datos multivariados son conjunto de datos que contienen observaciones de dos o más variables.

-   Las variables pueden ser numéricas o categóricas.

-   Las variables pueden o no depender las unas de las otras.

De hecho, el **objetivo** es establecer si hay alguna relación entre las variables, así como el tipo de relación.

## Ejemplo

Consideremos datos de 392 autos sobre sus millas por galón, número de cilindros, caballos de fuerza, peso, aceleración, año, origen, entre otras variables.

Los datos están en el archivo "auto_dataset.xlsx".

```{r}
#| echo: true


auto_data <- read_excel("auto_dataset.xlsx") # Leer los datos.
head(auto_data) # Ver las primeras 6 observaciones.
```


## Principio 1

En el contexto de datos de múltiples variables, las preguntas típicas a estudiar son:

::: incremental
-   ¿Cómo se relacionan entre sí la variable $X$ y la variable $Y$?

-   ¿Es la distribución de la variable $X$ la misma en todos los subgrupos definidos por la variable $Z$?

-   ¿Hay alguna observación inusual en la combinación de valores de las variables $X$ y $Y$? 

-   ¿Hay alguna observación inusual en $X$ para un subgrupo de la variable $Z$?
:::

## Tipos de gráficas

Existen varios tipos de gráficas que nos ayudan a explorar relaciones entre dos o más variables.

::: center
| Tipo        | Gráfica                                                                                       |
|:-------------|:---------------------------------------------------------|
| Numéricas   | Gráfico de dispersión                                                                         |
| Categóricas | Gráfico de barras lado a lado, gráfico de barras apiladas, gráfico de mosaico                 |
| Mixta       | Curvas de densidad superpuestas, diagramas de caja uno al lado del otro, gráficas de contorno |
:::

::: notes
For two features, the combination of types (both quantitative, both qualitative, or a mix) matters.
:::

# Dos variables numéricas

## Variable independiente y dependiente

Cuando investigamos la relación entre dos variables (numéricas o categóricas), tenemos una nomenclatura específica para cada una de ellas.

Usualmente llamamos a una variable como la *variable dependiente* o de *respuesta*. A ella la denotamos con el símbolo $Y$.

La otra variable la llamamos variable *independendiente* o *predictor*. A ella la denotamos con el símbolo $X$.

> Nuestro objetivo es saber si cambios en la variable $X$ están asociados a cambios en la variable $Y$, y el tipo de asociación.

## Gráfica de dispersión

La gráfica mas común para examinar la relación entre dos variables numéricas es la ***gráfica de dispersión***. 

Las variables $X$ y $Y$ se colocan en el eje horizontal y vertical, respectivamente. Cada punto en la gráfica marca la posición de un par de valores de $X$ y $Y$.

Con los diagramas de dispersión, buscamos relaciones lineales y no lineales, y examinamos el nivel de las relaciones.

## 

Para construir gráficas de dispersión, usamos la función `gf_point(Y ~ X, data = data_set)`.

Por ejemplo, construyamos una gráfica para explorar la relación entre el peso de un auto (`weight`) y sus rendimiento en millas por galón (`mpg`)

```{r}
#| fig-pos: center
#| echo: true

gf_point(mpg ~ weight, data = auto_data)
```

## Aplicando el principio 3

Siguiendo el principio 3, podemos cambiar los valores pre-establecidos de la función para definir colores o formas diferentes de los puntos de la gráfica.

</br>

Específicamente, puedes cambiar el color, la forma, y el tamaño de los puntos usando los argumentos `color`, `shape` y `size`, respectivamente.

## 

```{r}
#| fig-pos: center
#| echo: true

gf_point(mpg ~ weight, data = auto_data, color = "blue", shape = 4, size = 5)
```

## Posibles formas de los puntos

![](images/FIG-SCATTER-SHAPES-CHART-1.png){fig-align="center" width="530" height="344"}


##

Siguiendo con el principio 3, puedes usar funciones antes vistas para mejorar aún más la apariencia del gráfico.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

mi_diagrama <- gf_point(mpg ~ weight, data = auto_data, color = "darkblue", size = 2) + labs(title = "Relación de peso y millas por galón en autos", x = "Peso (lb)", y = "Millas por galón")
mi_diagrama <- mi_diagrama + theme(axis.text=element_text(size=20), axis.title=element_text(size=20),
                                   plot.title=element_text(size=25))
mi_diagrama
```

## Incluir el cero

En la gráfica anterior, el valor mínimo del eje vertical es alrededor de 10. Para ajustar el valor mínimo en ese eje a 0 usamos el comando adicional mostrado abajo.

```{r}
#| fig-pos: center
#| echo: true

mi_diagrama + scale_y_continuous(limits = c(0, 50))
```


## Gráficas individuales

Las gráficas individuales de variables ( como el histograma) no permiten estudiar la relación entre dos variables. Solo dan información de la *distribución* cada variable.

::: columns
::: {.column width="50%"}
```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

histogram_mpg <- gf_histogram( ~ mpg, data = auto_data, fill = "darkblue", color = "black") 
histogram_mpg <- histogram_mpg + labs(title = "Distribución de milas por galón", x = "Millas por galón", y = "Frecuencia")
histogram_mpg <- histogram_mpg + theme(axis.text=element_text(size=20), axis.title=element_text(size=20),
                                       plot.title=element_text(size=25))
histogram_mpg
```
:::

::: {.column width="50%"}
```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

histogram_weight <- gf_histogram( ~ weight, data = auto_data, fill = "darkblue", color = "black") 
histogram_weight <- histogram_weight + labs(title = "Distribución de peso", x = "Peso (lb)", y = "Frecuencia")
histogram_weight <- histogram_weight + theme(axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title=element_text(size=25))
histogram_weight
```
:::
:::


# Una variable categórica y una numérica

## !Divide los datos en grupos!

Para examinar la relación entre una variable numérica y una categórica, usamos la variable categórica para dividir los datos en grupos. Así comparamos la distribución de la variable numérica entre estos grupos.


En este contexto:

-   $X$ es la variable categórica.
-   $Y$ es la variable numérica.

La gráfica más efectiva para estudiar la relación entre una variable categórica y una numérica es la gráfica de caja.

## Gráfica de cajas por grupos

La gráfica de cajas lado a lado nos permite comparar la distribución de una variable en diferentes grupos.

Para generar la gráfica, usamos la función 

`gf_boxplot(Y ~ X, data = dataset)`.

```{r}
#| fig-pos: center
#| echo: true

gf_boxplot( mpg ~ origin, data = auto_data) 
```

## Mejorando la gráfica

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

bp_mpg_by_origin <- gf_boxplot( mpg ~ origin, data = auto_data, fill = "lightblue", color = "black") 
bp_mpg_by_origin <- bp_mpg_by_origin + labs(y = "Millas por galón", x = "Origen")
bp_mpg_by_origin <- bp_mpg_by_origin + theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
bp_mpg_by_origin
```


## Gráfica de violín por grupo

Los diagramas de violín también se pueden usar para dibujar curvas de densidad a lo largo de un eje para cada grupo.

El comando básico para generar está gráfica es `gf_violin(Y ~ X, data = dataset)`.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

violin_mpg_by_origin <- gf_violin( mpg ~ origin, data = auto_data, fill = "orange", color = "black") 
violin_mpg_by_origin <- violin_mpg_by_origin + labs(y = "Millas por galón", x = "Origen")
violin_mpg_by_origin <- violin_mpg_by_origin + theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
violin_mpg_by_origin
```

## Resúmenes estadísticos

En muchos casos, es útil calcular resúmenes estadísticos de la variable numérica $Y$ para cada categórica de la variable categórica $X$.

Para hacer esto, debemos usar la librería `library(dplyr)`. Esta librería contiene muchas funciones útiles. Aquí usaremos dos `group_by()` y `summarize()` para agrupar y resumir datos, respectivamente.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

auto_data %>% group_by(origin) %>% 
  summarize("mean" = mean(mpg), "max" = max(mpg), "min" = min(mpg))
```

## 

Puedes guardar la tabla en un nuevo objeto que puedes utilizar para visualizar.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

sum_data <- auto_data %>% group_by(origin) %>% 
  summarize("Promedio" = mean(mpg), "Maximo" = max(mpg), "Minimo" = min(mpg))

gf_point(Promedio ~ origin, data = sum_data, size = 5) + theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
```


# Dos variables categóricas

## Dividir los datos en grupos según una variable.

Con dos variables categóricas, a menudo comparamos la distribución de una variable entre subgrupos definidos por la otra variale.

De hecho, mantenemos constante una variable y trazamos la distribución de la otra.

Para hacer esto, podemos usar algunos de los mismos gráficos que usamos para mostrar la distribución de una variable categórica, como un gráfico de barras.

## We need to pre-process the data

To examine the relationship between these two qualitative features, we calculate three sets of proportions (one each for low, medium, and high suitability).

Within each suitability category, we find the proportion of small, medium, and large dogs. These proportions are displayed in the following table.

\[R CODE TO ILLUSTRATE THIS\]

## Gráfico de barras lado a lado

## Gráfico de barras apliadas

# Más de una variable

## Gráficas para tres variables

Cuando examinamos una distribución o relación, a menudo queremos compararla entre subgrupos de datos. Este proceso de condicionamiento sobre factores adicionales a menudo conduce a visualizaciones que involucran tres o más variables.

Aquí explicamos cómo leer gráficos que se usan comúnmente para visualizar múltiples variables.

## Gráfica de dispersión por color

Para dos variables numéricas y una categórica.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

gf_point(mpg ~ weight, color = ~origin, data = auto_data) 
```

## Gráfico de facetas o enrejado

Para dos variables numéricas (o categóricas) y una categórica.

```{r}
#| fig-pos: center
#| echo: true
#| code-fold: true

gf_point(mpg ~ weight, data = auto_data) %>% gf_facet_grid(origin ~ .)
```

# Actividad

## Emphasize the important difference

The activity may be about selecting the best graphs among two possibilities. When we show the answer we can include the code to generate the plot.

-   Emphasize

-   Ordering

-   Stacking

<https://learningds.org/ch/11/viz_comparisons.html>

# Aplicando el principio 3

## Agregar contexto

Hemos utilizado texto en nuestros gráficos a lo largo de este capítulo para proporcionar etiquetas de eje significativas que incluyen unidades de medida, etiquetas de marcas para categorías y títulos.

Un buen objetivo es incluir suficiente contexto en una trama para que pueda ser independiente: el lector debería poder captar la esencia de la trama sin necesidad de buscar una explicación en otra parte.

Dicho esto, cada elemento de un gráfico estadístico debe tener un propósito.

## Etiquetas y subtítulos

El contexto del texto incluye *etiquetas* y *títulos*. Es una buena práctica utilizar constantemente etiquetas informativas en las marcas y los ejes.

Ejemplo de etiquetas malas y buenas

Las etiquetas informativas son especialmente importantes para las tramas que otras personas verán e interpretarán.

## 

Los subtítulos sirven para varios propósitos. Describen lo que se ha tramado y orientan al lector. Los subtítulos también señalan características importantes de la trama y comentan sus implicaciones.

\[Examples of good and bad captions\]

::: notes
Readers often skim a publication and focus on section headings and visualizations, so plot captions should be self-contained.
:::

## Marcadores de referencia

*Marcadores de referencia* aportan contexto adicional a la región de trazado. Los puntos y líneas de referencia que proporcionan puntos de referencia, valores históricos y otra información externa ayudan a formar comparaciones e interpretaciones.

\[EXAMPLES OF LABELING MARKERS\]

::: notes
For example, we often add a reference line with slope 1 to a quantile-quantile plot. We might also add a vertical line on a time-series plot to mark a special event, like a natural disaster.
:::
