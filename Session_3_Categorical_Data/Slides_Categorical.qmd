---
title: |
   | Sesión 3: 
   | Variables Categóricas  
author: 
  - name: Alan R. Vázquez
    email: alanrvazquez@tec.mx
    affiliations:
      - name: Tecnológico de Monterrey
format: 
  revealjs:
    chalkboard: true
    multiplex: true
editor: visual
slide-number: True
logo: IN2039_logo.png
css: style.css
---

## Los Tópicos de Hoy

[*Enfocarnos en 1 variable categórica.*]{style="color:darkblue;"}

<br/>

::: columns
::: {.column width="50%"}
1.  Resúmenes estadísticos
:::

::: {.column width="50%"}
2.  Tipos de gráficas
:::
:::

::: columns
::: {.column width="30%"}
3.  Actividad
:::

::: {.column width="70%"}
:::
:::

## Penguins Dataset

Ilustraremos los conceptos de hoy utlizando el conjunto de datos `penguins.xlsx`.

::: columns
::: {.column width="68%"}
Cargalo en R usando el siguiente código.

```{r}
#| output: false
#| echo: true
#| code-overflow: wrap


library(readxl)
penguins_data <- read_excel("penguins.xlsx")
```
:::

::: {.column width="32%"}
![](images/clipboard-1776523589.png){fig-align="right" width="561"}
:::
:::

Recuerda que el archivo debe de estar en la misma carpeta que tu código.

## 

![](images/clipboard-3758853900.png)

## 

![](images/clipboard-3461599711.png){fig-align="center" width="647"}

## Asegurate que R sabe que la variable es categorica

Antes de comenzar, debemos de checar si R reconoce las variables como categóricas o numéricas.

> En R, las variables categoricas se conocen como `factor` y las variables numéricas como `numeric`.

Le puedes pregunar a R por una variable en particular, por ejemplo, `species`, así:

```{r}
#| echo: true
#| output: true

is.factor(penguins_data$species)
```

## R no es inteligente

A pesar de que la variable `species` claramente es categórica, R no reconoce esto. Para asegurarnos que R sepa que la variable es categórica, hacemos lo siguiente

```{r}
#| echo: true
#| output: true

penguins_data$species <- factor(penguins_data$species)
```

<br/>

Preguntemosle a R el tipo de variable otra vez.

```{r}
#| echo: true
#| output: true

is.factor(penguins_data$species)
```

## Te recomiendo hacer lo mismo para las otras variables categóricas

```{r}
#| echo: true
#| output: true

penguins_data$island <- factor(penguins_data$island)
penguins_data$sex <- factor(penguins_data$sex)
penguins_data$year <- factor(penguins_data$year)
```

## Resumenes Estadísticos

> Un **resumén estadístico** nos ayuda a resumir un conjunto de observaciones de una manera simple.

Los resúmenes numéricos más utilizados para datos categóricos son las frecuencias y las frecuencias relativas.

-   La [**frecuencia**]{style="color:darkblue;"} de una categoría es la cantidad de elementos de muestra que pertenecen a esa categoría.

-   La [**frecuencia relativa**]{style="color:darkblue;"} es la frecuencia dividida por el número total de observaciones.

## Tabla de Frecuencia

Resume una variable categorica contando los valores por categoría.

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| output: true
#| code-overflow: wrap

table(penguins_data$species)
```
:::

::: {.column width="50%"}
| **Especie** | **Frecuencia** |
|-------------|----------------|
| Adelie      | 152            |
| Chinstrap   | 68             |
| Gentoo      | 124            |
| **Total**   | **344**        |
:::
:::

-   **Frecuencia**: Número de observaciones en cada categoría.

-   **Total**: Suma total de observaciones.

::: notes
1.  Ventajas de las frequencias.

2.  Resumen claro y conciso de los datos categóricos.

3.  Facilita la identificación de patrones y tendencias.

4.  Ayuda en la toma de decisiones informadas.
:::

## Tabla de Frecuencia Relativa

Resume una variable categorica calculando la *proporción de valores* por categoría.

::: columns
::: {.column width="55%"}
```{r}
#| echo: true
#| output: true
#| code-overflow: wrap

# Calcula el número de observaciones.
n <- nrow(penguins_data) 

# Calcula la frequencia relativa.
table(penguins_data$species)/n
```
:::

::: {.column width="45%"}
| **Especie** | **Frecuencia relativa** |
|-------------|-------------------------|
| Adelie      | 0.4418605               |
| Chinstrap   | 0.1976744               |
| Gentoo      | 0.3604651               |
| **Suma**    | **1**                   |
:::
:::

-   **Frecuencia relativa**: Número de observaciones en cada categoría dividida por el total.

::: notes
La ventaja de la frequencia relativa es que se puede interpretar como una probabilidad. Lo que da mas información.
:::

## Gráficas de Barras

Los gráficos de barras se utilizan comúnmente para describir datos cualitativos clasificados en varias categorías según el sector, la región, los diferentes períodos de tiempo u otros factores similares.

> Diferentes sectores, diferentes regiones o diferentes períodos de tiempo se etiquetan como categorías específicas.

Un gráfico de barras se construye creando categorías que se representan etiquetando cada categoría y que se representan mediante intervalos de igual longitud en un eje horizontal.

El recuento o frecuencia dentro de la categoría correspondiente está representado por una barra de altura proporcional a la frecuencia.

## Ejemplo

![](images/clipboard-914413015.png)

## Gráficos Circulares

Los gráficos circulares se utilizan comúnmente para describir datos cualitativos de una población.

Se construye dividiendo un círculo en varias porciones que representan diferentes categorías de una población.

El gráfico circular nos ayuda a comprender mejor de un vistazo la composición de la población con respecto a la característica de interés.

![](images/clipboard-800609446.png)

## Transformando Variables Categoricas

Whether a feature is nominal or ordinal, we may find it useful to relabel categories so that they are more informative; collapse categories to simplify a visualization; and even convert a numeric feature to ordinal to focus on particular transition points.

We explain when we may want to make each of these transformations and give examples.

## Re-etiquetado

We can transform `children` by replacing the numbers with their string descriptions. Changing 1, 2, and 3 into high, medium, and low makes it easier to recognize that `children` is categorical.

Next, we can compute a bar chart.

## Colapsando categorías

Let’s create a new column, called `play`, to represent the groups of dogs whose “purpose” is to play (or not). (This is a fictitious distinction used for demonstration purposes.) This category consists of the toy and non-sporting breeds.

The new feature, `play`, is a transformation of the feature `group` that collapses categories: toy and non-sporting are combined into one category, and the remaining categories are placed in a second, non-play category.

The boolean (`bool`) storage type is useful to indicate the presence or absence of this characteristic:

```{r}

```

## 

Representing a two-category qualitative feature as a boolean has a few advantages. For example, the mean of `play` makes sense because it returns the fraction of `True` values. When booleans are used for numeric calculations, `True` becomes 1 and `False` becomes 0:

```{r}

```

## Convertir de quantitativo a ordinal

Finally, another transformation that we sometimes find useful is to convert numeric values into categories.

For example, we might collapse the values in `ailments` into categories: 0, 1, 2, 3, 4+. In other words, we turn `ailments` from a quantitative feature into an ordinal feature with the mapping 0→0, 1→1, 2→2, 3→3, and any value 4 or larger→4+.

We might want to make this transformation because few breeds have more than three genetic ailments. This simplification can be clearer and adequate for an investigation.

## Sin embargo...

When we convert a quantitative feature to ordinal, we lose information. We can’t go back. That is, if we know the number of ailments for a breed is four or more, we can’t re-create the actual numeric value.

The same thing happens when we collapse categories. For this reason, it’s a good practice to keep the original feature.

If we need to check our work or change categories, we can document and re-create our steps.
